services:
  mongodb:
    image: mongo:7.0
    container_name: ai-stock-dashboard-mongodb-prod
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME:-ai_stock_dashboard}
    volumes:
      - mongodb_data:/data/db
      - ./docker-init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai-stock-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-stock-dashboard-backend-prod
    # No ports exposed - internal communication only
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - POLYGON_API_KEY=${POLYGON_API_KEY:-}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-}
      - MONGODB_URL=${MONGODB_URL:-mongodb://admin:password123@mongodb:27017}
      - DATABASE_NAME=${DATABASE_NAME:-ai_stock_dashboard}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-key-change-in-production}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    networks:
      - ai-stock-network
    restart: unless-stopped
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.ssl
    container_name: ai-stock-dashboard-frontend-prod
    ports:
      - "34197:80"   # For HTTP
      - "34198:443"  # For HTTPS
    volumes:
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
    depends_on:
      - backend
    networks:
      - ai-stock-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:

networks:
  ai-stock-network:
    driver: bridge
